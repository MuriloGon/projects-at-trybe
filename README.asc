:repo: https://github.com/MuriloGon/projects-at-trybe/tree/
:link-str: (link) 
:smry-fundam: link:#fundamentals[[ðŸ •\]]
:smry-frontend: link:#frontend[[ðŸ •\]]
:smry-backend: link:#backend[[ðŸ •\]]

// Fundamentals
:p01: P01-G1-B03-lessons-learned
:p02: P02-G1-B04-playground-functions
:p03: P03-G1-B05-project-pixel-art
:p04: P04-G1-B05-todo-list-project
:p05: P05-G1-B05-meme-generator
:p06: P06-G1-B05-mistery-letter
:p07: P07-G1-B05-color-guess
:p08: P08-G1-B06-facebook-sign-up
:p09: P09-G1-B07-js-unit-tests
:p10: P10-G1-B08-zoo-functions
:p11: P11-G1-B09-shopping-cart
:p12: P12-G1-B10-jest

// Frontend
:p13-1: P13-G2-B11-movies-cards-library
:p13-2: xP01-G2-B11-movie-cards-library

:p14-1: P14-G2-B12-movie-cards-library-stateful
:p14-2: xP02-G2-B12-movie-cards-lib-stateful

:p15-1: P15-G2-B13-movie-card-library-crud
:p15-2: xP03-G2-B13-movie-card-library-crud

:p16-1: P16-G2-B14-frontend-online-store
:p16-2: xP04-G2-B14-frontend-online-store

:p17-1: P17-G2-B15-react-testing-library
:p17-2: xP05-G2-B15-react-testing-library

:p18: P18-G2-B16-trybe-wallet
:p19: P19-G2-B17-trivia-game
:p20: P20-G2-B18-starwars-planets-search
:p21: P21-G2-B19-recipes-app

// Backend
:p22-1: P22-G3-B20-mysql-all-for-one
:p22-2: xP06-G3-B20-my-sql-all-for-one

:p23-1: P23-G3-B21-mysql-vocabulary-booster
:p23-2: xP08-G3-B21-mysql-vocabulary-booster

:p24: P24-G3-B22-mysql-one-for-all

:p25-1: P25-G3-B23-mongodb-dataflights
:p25-2: xP07-G3-B23-mongodb-dataflights

:p26-1: P26-G3-B24-mongodb-commerce
:p26-2: xP09-G3-B24-mongodb-commerce

:p27-1: P27-G3-B25-mondodb-aggregations
:p27-2: xP10-G3-B25-mongodb-aggregations

:p28-1: P28-G3-B26-talker-manager
:p28-2: xP11-G3-B26-talker-manager 

:p29-1: P29-G3-B27-store-manager
:p29-2: xP12-G3-B27-store-manager

:p30-1: P30-G3-B28-cookmaster
:p30-2: xP13-G3-B28-cookmaster

:p31-1: P31-G3-B29-stranger
:p31-2: P31-G3-B29-stranger-things-backend
:p31-3: P31-G3-B29-stranger-things-frontend


== Projects summary
[#fundamentals]
=== Fundamentals
. link:#{p01}[Lessons Learned]
. link:#{p02}[Playground Functions]
. link:#{p03}[Pixel Art]
. link:#{p04}[Todo List]
. link:#{p05}[Meme Generator]
. link:#{p06}[Mistery Letter]
. link:#{p07}[Color Guess]
. link:#{p08}[Facebook Sign-Up]
. link:#{p09}[JS Unit Tests]
. link:#{p10}[Zoo Functions]
. link:#{p11}[Shopping Cart]
. link:#{p12}[Jest]

[#frontend]
== Frontend
. link:#{p13-1}[Movie Cards Library]
. link:#{p14-1}[Movie Cards Library Stateful]
. link:#{p15-1}[Movie Cards Library CRUD]
. link:#{p16-1}[Frontend Online Store]
. link:#{p17-1}[React Testing Library]
. link:#{p18}[Trybe Wallet]
. link:#{p19}[Trivia Game]
. link:#{p20}[Starwars Planets Search]
. link:#{p21}[Recipes App]

[#backend]
== Backend
. link:#{p22-1}[MySQL - All For One]
. link:#{p23-1}[MySQL - Vocabulary Booster]
. link:#{p24}[MySQL - One For all]
. link:#{p25-1}[Mongodb Dataflights]
. link:#{p26-1}[Mongodb Commerce]
. link:#{p27-1}[Mongodb Aggregations]
. link:#{p28-1}[Talker Manager]
. link:#{p29-1}[Store Manager]
. link:#{p30-1}[Cookmaster]
. link:#{p31-1a}[Stranger Things]

== Fundamentals
[#{p01}]
=== Lessons Learned {smry-fundam}
* *What I've learned*: 
    ** HTML
    ** Semantic HTML
    ** CSS
* *Source code*:
    ** {repo}{p01}[repo]
    ** https://github.com/tryber/sd-010-a-project-lessons-learned/pull/127[Pull request]

[#{p02}]
=== Playground Functions {smry-fundam}
* *What I've learned*:
    ** Write JavaScript code that uses variables, constants, and primitive types;
    ** Use language concepts such as dynamic typing and logical/arithmetic/assignment operators in your code;
    ** Create code that uses conditional structures such as `if/else` .
    ** Manipulate arrays (lists);
    ** Use the `for` command;
    ** Break big problems into small ones;
    ** Use programming logic to solve problems.
    ** Manipulate objects;
    ** Use the `for/in` command;
    ** Use functions to organize and structure your code;
* *Source code*:
    ** {repo}{p02}[repo]
    ** https://github.com/tryber/sd-010-a-project-playground-functions/pull/2[Pull request]

[#{p03}]
=== Pixel Art {smry-fundam}
* *What I've learned*:
    ** Manipulating the DOM
    ** Manipulate Javascript
* *Source code*:
    ** {repo}{p03}[repo]
    ** https://github.com/tryber/sd-010-a-project-pixels-art/pull/131[Pull request]

[#{p04}]
=== Todo List {smry-fundam}
* *What I've learned*:
    ** manipulate CSS
    ** manipulate Javascript
* *Source code*: 
  ** {repo}{p04}[repo]
  ** https://github.com/tryber/sd-010-a-project-todo-list/pull/49[Pull request]

[#{p05}]
=== Meme Generator {smry-fundam}
* *What I've learned*:
    ** Manipulate the DOM
    ** Manipulate Javascript
    ** Manipulate the CSS
* *Source code*:
    ** {repo}{p05}[repo]
    ** https://github.com/tryber/sd-010-a-project-meme-generator/pull/18[Pull request]

[#{p06}]
=== Mistery Letter {smry-fundam}
* *What I've learned*:
    ** Manipulate the DOM
    ** Manipulate Javascript
    ** Manipulate the CSS
* *Source code*:
    ** {repo}{p06}[repo]
    ** https://github.com/tryber/sd-010-a-project-mistery-letter/pull/11[Pull request]

[#{p07}]
=== Color Guess {smry-fundam}
* *What I've learned*:
    ** Manipulate the DOM
    ** Manipulate Javascript
    ** Manipulate the CSS
* *Source code*:
    ** {repo}{p07}[repo]
    ** https://github.com/tryber/sd-010-a-project-color-guess/pull/14[Pull request]

[#{p08}]
=== Facebook Sign-Up {smry-fundam}
* *What I've learned*:
    ** Create HTML Forms
    ** Use CSS Flexbox to create flexible layouts
    ** Create specific CSS rules to apply to mobile devices
    ** Build pages that change their layout according to screen orientation
* *Source code*:
    ** {repo}{p08}[repo]
    ** https://github.com/tryber/sd-010-a-project-facebook-signup/pull/93[Pull request]

[#{p09}]
=== JS Unit Tests {smry-fundam}
* *What I've learned*:
    ** Write unit tests for functions using the Assert module NodeJS to verify the correct operation of these functions;
    ** From tests already implemented, write functions so that they meet the proposed tests;
    ** Write tests and functions using a test-driven development (TDD) approach.
* *Source code*:
    ** {repo}{p09}[repo]
    ** https://github.com/tryber/sd-010-a-project-js-unit-tests/pull/53[Pull request]

[#{p10}]
=== Zoo Functions {smry-fundam}
* *What I've learned*:
    ** Use Higher Order Functions to implement the expected requirements
    ** Abtract a logical problemn
* *Source code*:
    ** {repo}{p10}[repo]
    ** https://github.com/tryber/sd-010-a-project-zoo-functions/pull/108[Pull request]

[#{p11}]
=== Shopping Cart {smry-fundam}
* *What I've learned*:
    ** Make requests to an API (Application Programming Interface) of Mercado Livre;
    ** Use your knowledge of JavaScript, CSS and HTML;
    ** Work with asynchronous functions;
* *Source code*:
    ** {repo}{p11}[repo]
    ** https://github.com/tryber/sd-010-a-project-shopping-cart/pull/82[Pull request]

[#{p12}]
=== Jest {smry-fundam}
* *What I've learned*:
    ** Write tests for asynchronous functions
    ** Apply your knowledge about testing using Jest
    ** "Mock up" functions
    ** "Mock up" APIs
* *Source code*:
    ** {repo}{p12}[repo]
    ** https://github.com/tryber/sd-010-a-project-jest/pull/1[Pull request]

== Frontend
[#{p13-1}]
=== Movie Cards Library {smry-frontend}
* *What I've learned*:
  ** Know the best way to install a package manager
  ** Start a project in *React*
  ** Use JSX in *React*
  ** Using *ReactDOM.render* to render elements on a web page
  ** Use `import` to use external code with your
  ** Create *React* components correctly
  ** Make use of `props` correctly
  ** Make components correctly
  ** Create multiple components dynamically
  ** Use *PropTypes* to check a prop's type when using a component
  ** Use *PropTypes* to ensure the presence of mandatory props when using a component
  ** Use *PropTypes* to check that a prop is a specific format object
  ** Use *PropTypes* to ensure that a prop is an array with elements of a given type
* *Source code*:
    ** {repo}{p13-1}[repo1]
    ** {repo}{p13-2}[repo2]
    ** https://github.com/tryber/sd-010-a-project-movie-cards-library/pull/88[Pull request]

[#{p14-1}]
=== Movie Cards Library Stateful {smry-frontend}
* *What I've learned*:
  ** Read the state of a component and use it to change what we display in the browser
  ** Initialize a component, giving it a predefined state
  ** Update a component's state
  ** Capture events using React syntax
  ** Create forms using JSX syntax with the tags: `input`, `textarea`, `select`, `form`
  ** Pass information from child components to parent components via callbacks
* *Source code*:
    ** {repo}{p14-1}[repo1]
    ** {repo}{p14-2}[repo2]
    ** https://github.com/tryber/sd-010-a-project-movie-cards-library-stateful/pull/60[Pull request]

[#{p15-1}]
=== Movie Cards Library CRUD {smry-frontend}
* *What I've learned*:
  ** Use componentDidMount to perform an action after the component is inserted into the DOM;
  ** Use shouldComponentUpdate to assess whether or not a component update should happen at that time;
  ** Use componentDidUpdate to perform an action after the component is updated;
  ** Use componentWillUnmount to perform an action before the component is unmounted;
  ** Use props.children to access the children of a React component and interact with them;
  ** Use the BrowserRouter component correctly;
  ** Create navigation links in the application with the Link component;
  ** Create routes, mapping the URL path with the corresponding component, via Route ;
  ** Structure and organize the routes of your application with the Switch component;
Use the Redirect component to switch between routes.
* *Source code*:
    ** {repo}{p15-1}[repo1]
    ** {repo}{p15-2}[repo2]
    ** https://github.com/tryber/sd-010-a-project-movie-card-library-crud/pull/105[Pull request]

[#{p16-1}]
=== Frontend Online Store {smry-frontend}
* *What I've learned*:
  ** Understand what Agile Methods are
  ** Understand what kanban is
  ** Understand what Scrum is
  ** Working in teams using Kanban or Scrum effectively
  ** Practice all skills developed so far in the Front-End module
* *Source code*:
    ** {repo}{p16-1}[repo1]
    ** {repo}{p16-2}[repo2]
    ** https://github.com/tryber/sd-010-a-project-frontend-online-store/pull/453[Pull request]

[#{p17-1}]
=== React Testing Library {smry-frontend}
* *What I've learned*:
  ** Use selectors (queries) from React-Testing-Library in automated tests.
  ** Simulate events with React-Testing-Library in automated tests.
  ** Test asynchronous logical flows with React-Testing-Library.
  ** Write tests that allow refactoring the structure of application components without needing to change them.
  ** Create API mocks using fetch.
  ** Test inputs.

* *Source code*:
    ** {repo}{p17-1}[repo1]
    ** {repo}{p17-2}[repo2]
    ** https://github.com/tryber/sd-010-a-project-react-testing-library/pull/79[Pull request]


[#{p18}]
=== Trybe Wallet {smry-frontend}
* *What I've learned*:
  ** Create a Redux store in React applications
  ** Create reducers in Redux in React applications
  ** Create actions in Redux in React applications
  ** Create dispatchers in Redux in React applications
  ** Connect Redux to React components
  ** Create asynchronous actions in your React application that uses Redux.

* *Source code*:
    ** {repo}{p18}[repo1]
    ** https://github.com/tryber/sd-010-a-project-trybewallet/pull/113[Pull request]

[#{p19}]
=== Trivia Game {smry-frontend}
* *What I've learned*:
  ** Use the React Context API to manage state.
  ** Use React Hook useState;
  ** Use React Hook useContext;
  ** Use React Hook useEffect;
  ** Create custom React Hooks.

* *Source code*:
    ** {repo}{p19}[repo1]
    ** https://github.com/tryber/sd-010-a-project-trivia-react-redux/pull/468[Pull request]

[#{p20}]
=== Starwars Planets Search {smry-frontend}
* *What I've learned*:
  ** Use a React Context API to manage state.
  ** Use React Hook useState;
  ** Use React Hook useContext;
  ** Use React Hook useEffect;
  ** Create custom React Hooks.

* *Source code*:
    ** {repo}{p20}[repo1]
    ** https://github.com/tryber/sd-010-a-project-starwars-planets-search/pull/1[Pull request]

[#{p21}]
=== Recipes App {smry-frontend}
* *What I've learned*:
  ** Use Redux to manage state
  ** Using the React-Redux library
  ** Use the React Context API to manage state
  ** Use React Hook useState
  ** Using React Hook useContext
  ** Using React Hook useEffect
  ** Create custom hooks

* *Source code*:
    ** {repo}{p21}[repo1]
    ** https://github.com/tryber/sd-010-a-project-recipes-app/pull/368[Pull request]
  
== Backend
[#{p22-1}]
=== All For One {smry-backend}
* *What I've learned*:
  ** Understand what databases are
  ** Understanding how structured query language (SQL) is used
  ** Understand how tables fit into the database concept
  ** Build a local development environment to practice SQL
  ** Understand how to use MySQL Workbench
  ** Understand what an SQL query is and what its command types are
  ** Generate values â€‹â€‹with `SELECT`
  ** Select columns individually with `SELECT`
  ** Renaming and generating columns in an AS query
  ** Concatenate columns and values â€‹â€‹with `CONCAT`
  ** Remove Duplicate Data in a Query with `DISTINCT`
  ** Count the number of results in a query with `COUNT`
  ** Limit the amount of results in a query with `LIMIT`
  ** Skipping results in an `OFFSET` query
  ** Order the results of a query with `ORDER BY`
  ** Filter query results with `WHERE`
  ** Using Boolean and Relational Operators in Queries
  ** Create more dynamic and malleable queries â€‹â€‹with `LIKE`
  ** Make queries that encompass a range of results with `IN` and `BETWEEN`
  ** Find and separate results that include data.
  ** Insert data into tables with `INSERT`
  ** Update data in tables with `UPDATE`
  ** Delete data in tables with `DELETE`
* *Source code*:
    ** {repo}{p22-1}[repo1]
    ** {repo}{p22-2}[repo2]
    ** https://github.com/tryber/sd-010-a-mysql-all-for-one/pull/46[Pull request]

[#{p23-1}]
=== MySQL - Vocabulary Booster {smry-backend}
* *What I've learned*:
  ** Create conditionals in *SQL* using *IF* and *CASE*
  ** Strings Handlers without *SQL*
  ** Use as *MySQL* math functions
  ** Additional information specific to table data
  ** Using *AVG*, *MIN*, *MAX*, *SUM* and *COUNT* aggregation functions
  ** View and filter data in a grouped way with *GROUP BY* and *HAVING*
  ** Use *INNER JOIN*, *LEFT JOIN*, *RIGHT JOIN* to combine data from two or more tables
  ** Use *SELF JOIN* to join a table with itself
  ** Use *SUBQUERIES*
  ** Create more efficient *EXISTS* queries
  ** Assembling reusable *SQL* code blocks with *STORED PROCEDURES* and *STORED FUNCTIONS*

* *Source code*:
    ** {repo}{p23-1}[repo1]
    ** {repo}{p23-2}[repo2]
    ** https://github.com/tryber/sd-010-a-mysql-vocabulary-booster/pull/11[Pull request]

[#{p24}]
=== MySQL - One For All {smry-backend}
* *What I've learned*:
  ** Model a database
  ** Identify entities, attributes and relationships
  ** Apply the 1st, 2nd and 3rd Normal Form
  ** Create tables
  ** Handle VIEWs
  ** Change existing tables
  ** Create dynamic reactions with TRIGGERS
* *Source code*:
    ** {repo}{p24}[repo1]
    ** https://github.com/tryber/sd-010-a-mysql-one-for-all/pull/63[Pull request]

[#{p25-1}]
=== Mongodb Dataflights {smry-backend}
* *What I've learned*:
  ** Search for documents in the bank
  ** Use filters in the search
  ** Delete documents according to filter
  ** Count documents included in requested filters
  ** Insert documents in the bank
* *Source code*:
    ** {repo}{p25-1}[repo1]
    ** {repo}{p25-2}[repo2]
    ** https://github.com/tryber/sd-010-a-mongodb-dataflights/pull/3[Pull request]

[#{p26-1}]
=== Mongodb Commerce {smry-backend}
* *What I've learned*:
  ** Using the $pop, $pull and $push operators
  ** Using the $addToSet operator
  ** Use the $each, $slice and $sort operators
  ** Use the $all operator to filter documents
  ** Use the $elemMatch Operator to Filter Documents
  ** Use the $size operator to filter documents by array size
  ** Using the $expr Operator to Create Aggregate Expressions
  ** Using regular expressions and the $regex operator to fetch documents
  ** Using the textual index and the $text operator
  ** Use the $mod operator

* *Source code*:
    ** {repo}{p26-1}[repo1]
    ** {repo}{p26-2}[repo2]
    ** https://github.com/tryber/sd-010-a-mongodb-commerce/pull/18[Pull request]


[#{p27-1}]
=== Mongodb Aggregations {smry-backend}
* *What I've learned*:
  ** Perform complex searches in mongoDB database
  ** Use aggregation operators to pipeline

* *Source code*:
    ** {repo}{p27-1}[repo1]
    ** {repo}{p27-2}[repo2]
    ** https://github.com/tryber/sd-010-a-mongodb-aggregations/pull/4[Pull request]

[#{p28-1}]
=== Talker Manager {smry-backend}
* *What I've learned*:
  ** Perform asynchronous operations using callbacks;
  ** Perform asynchronous operations using Promises;
  ** Read and write files locally with NodeJS;
  ** Write your own scripts that create and consume Promises;
  ** Rewrite code that uses callbacks to use Promises;
  ** Make function calls consciously;
  ** Understand the basics of how JavaScript works;
  ** Detect and troubleshoot code more objectively;
  ** Understand the difference between synchronous and asynchronous execution;
  ** Understand what HTTP is, what an API is, and what the two have to do with Express;
  ** Write APIs using Node and Express;
  ** Understand the structure of an Express application and how to organize its code;
  ** Create routes and apply middleware.

* *Source code*:
    ** {repo}{p28-1}[repo1]
    ** {repo}{p28-2}[repo2]
    ** https://github.com/tryber/sd-010-a-project-talker-manager/pull/123[Pull request]

[#{p29-1}]
=== Store Manager {smry-backend}
* *What I've learned*:

  ** Understand how the Model layer works;
  ** Delegate specific to that layer;
  ** Connect your application with different database collections;
  ** Structure an application in layers;
  ** Delegate specific to each part of the application;
  ** Improve maintainability and reusability of your code;
  ** Understand and apply REST standards;
  ** Write signatures for intuitive and easily understandable APIs.

* *Source code*:
    ** {repo}{p29-1}[repo1]
    ** {repo}{p29-2}[repo2]
    ** https://github.com/tryber/sd-010-a-store-manager/pull/4[Pull request]


[#{p30-1}]
=== Cookmaster {smry-backend}
* *What I've learned*:

  ** Understand what's inside an authentication token;
  ** Generate tokens from information such as login and password;
  ** Authenticate Express routes, using JWT token;
  ** Upload files to REST APIs;
  ** Save files to the server via a REST API;
  ** Query server files through a REST api.
  ** Perform integration testsWrite signatures for intuitive and easily understandable APIs.

* *Source code*:
    ** {repo}{p30-1}[repo1]
    ** {repo}{p30-2}[repo2]
    ** https://github.com/tryber/sd-010-a-cookmaster/pull/102[Pull request]

[#{p31-1a}]
=== Stranger Things {smry-backend}
* *What I've learned*:

  ** Publish apps via Heroku;
  ** View logs of your published applications;
  ** Monitor your published applications;
  ** Use environment variables within Heroku;
  ** Install, use and enjoy the main features of PM2;
  ** Deploy on Heroku using resources from a process manager.

* *Source code*:
    ** {repo}{p31-1}[repo - Instructions]
    ** {repo}{p31-2}[repo - Backend]
    ** {repo}{p31-3}[repo - Frontend]
    ** https://github.com/tryber/sd-010-a-stranger-things-backend/pull/68[Pull request - backend]
    ** https://github.com/tryber/sd-010-a-stranger-things-frontend/pull/54[Pull request - frontend]
